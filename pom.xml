<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.it2go.micro</groupId>
    <artifactId>microservices-bom</artifactId>
    <version>3.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>project-management-service</artifactId>
  <version>1.0.2-SNAPSHOT</version>
  <name>project-management-service</name>
  <description>Project management service</description>

  <properties>
    <openapi.definitions.url>
      https://raw.githubusercontent.com/mambarek/apis-definitions-repo/master/definitions
    </openapi.definitions.url>
    <fabric8-docker-maven-plugin>0.34.1</fabric8-docker-maven-plugin>
    <dockerfile-maven-version>1.4.13</dockerfile-maven-version>
    <docker.source.directory>docker</docker.source.directory>
    <docker.dockerfile>Dockerfile</docker.dockerfile>
    <docker.repository>mmbarek</docker.repository>
    <docker.image.name>${project.artifactId}</docker.image.name>
  </properties>

  <scm>
    <developerConnection>
      scm:git:http://mmbarek:mmbarek@ubuntu-server:7990/scm/ema/project-management-service.git
    </developerConnection>
    <url>http://ubuntu-server:7990/scm/ema/project-management-service</url>
    <tag>project-management-service-1.0.0</tag>
  </scm>

  <dependencies>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>3.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-ui</artifactId>
      <version>1.4.4</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
    </dependency>
<!--    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-openfeign</artifactId>
    </dependency>-->
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <annotationProcessorPaths>
            <annotationProcessorPath>
              <groupId>org.hibernate</groupId>
              <artifactId>hibernate-jpamodelgen</artifactId>
              <version>${hibernate.version}</version>
            </annotationProcessorPath>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin
        </artifactId> <!-- surefire plugin version managed by Spring Boot -->
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
        <executions>
          <execution>
            <id>unit-tests</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skipTests>true</skipTests>
              <includes>
                <include>**/*Test.java</include>
              </includes>
            </configuration>
          </execution>
          <execution>
            <id>integration-tests</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skipTests>true</skipTests>
              <includes>
                <include>**/*IT.*</include>
                <include>**/*Tests.*</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>5.0.0-beta</version>
        <executions>
          <execution>
            <id>employees-model</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>spring</generatorName>
              <inputSpec>${openapi.definitions.url}/employees/v1/employees-api.yaml</inputSpec>
              <modelPackage>com.it2go.micro.employeesservice.domian</modelPackage>
              <skipValidateSpec>true</skipValidateSpec>
              <generateSupportingFiles>false</generateSupportingFiles>
              <generateApis>false</generateApis>
              <generateApiDocumentation>false</generateApiDocumentation>
              <generateModelDocumentation>true</generateModelDocumentation>
              <verbose>false</verbose>
              <configOptions>
                  <serializableModel>true</serializableModel>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${fabric8-docker-maven-plugin}</version>
        <configuration>
          <verbose>true</verbose>
          <images>
            <image>
              <name>${docker.repository}/${docker.image.name}</name>
              <build>
                <contextDir>${project.basedir}</contextDir>
                <dockerFile>${docker.source.directory}/${docker.dockerfile}</dockerFile>
                <assembly>
                  <descriptorRef>artifact</descriptorRef>
                </assembly>
                <tags>
                  <tag>${project.version}</tag>
                </tags>
              </build>
              <run>
                <ports>
                  <port>8030:8030</port>
                </ports>
              </run>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>default</id>
            <phase>install</phase>
            <goals>
              <goal>build</goal>
              <!--<goal>push</goal>-->
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
